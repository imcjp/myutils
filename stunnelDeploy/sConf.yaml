#解析表达式规则：
#1、解析表达式为字符串且第一个字符为'='，其后的内容即为待解析的python表达式
#2、python表达式可以解析出数组，但多个数组的长度务必一样
#3、解析表达式中可用的变量、函数如下：
#  a) data：即来自相同配置项下的data数据。使用data.XX的方式引用。
#  b) flat: 数组展平函数，它可以将二维数组展平为一维。

#服务端示例
rules:
  simple:
    # 简单配置
    conf:
      cert: pri_server.pem
      key: pri_server.pem
      CAfile: pub_client.pem
      verify: 3
      accept: 80
      connect: 8080
  sequence:
    # 序列配置，将1000-1009安全映射到2000-2009
    data:
      acceptStart: 2000
      connectStart: 1000
      len: 10
    conf:
      cert: pri_server.pem
      key: pri_server.pem
      CAfile: pub_client.pem
      verify: 3
      accept: =[data.acceptStart+i for i in range(data.len)]
      connect: =[data.connectStart+i for i in range(data.len)]
  matrix:
    # 矩阵化部署配置，1XXYY端口安全映射到2XXYY，其中XX即为站点的编号（portSizes的组数下标），YY可取值范围为0 ~ portSizes[XX]-1，表示为XX站点开的端口数量
    data:
      portSizes: [3,4,6]
      connectPre: 1
      acceptPre: 2
    conf:
      cert: pri_server.pem
      key: pri_server.pem
      CAfile: pub_client.pem
      verify: 3
      accept: =flat([[f"{data.acceptPre}"+"{:02d}".format(i)+"{:02d}".format(j) for j in range(sz)] for i, sz in enumerate(data.portSizes)])
      connect: =flat([[f"{data.connectPre}"+"{:02d}".format(i)+"{:02d}".format(j) for j in range(sz)] for i, sz in enumerate(data.portSizes)])
  hashing:
    # 灵活配置，将scrPorts的每个端口安全映射到acceptStart+i（i为scrPorts的下标）
    data:
      scrPorts: [ 36,90,33,89 ]
      acceptStart: 3000
    conf:
      cert: pri_server.pem
      key: pri_server.pem
      CAfile: pub_client.pem
      verify: 3
      accept: =[data.acceptStart+i for i in range(len(data.scrPorts))]
      connect: =data.scrPorts